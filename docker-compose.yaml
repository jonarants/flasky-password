services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.flask
    ports:
      - "5000:5000"
    depends_on:
      - db
    networks:
      - app-network
    container_name: web
    secrets:
      - mysql_user_secret
      - mysql_password_secret
      - mysql_host_secret
      - mysql_port_secret
      - mysql_database_secret
      - flask_secret_key_secret
  
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "8080:8080"
    depends_on:
      - web
    networks:
      - app-network
    restart: always
    container_name: nginx
  db:
    build:
      context: .
      dockerfile: Dockerfile.mysql
    ports:
      - "3306:3306"
    networks:
      - app-network
    volumes:
      - myDB:/var/lib/mysql
      - ./MYSQL:/docker-entrypoint-initdb.d
    container_name: db
    
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/mysql_root_password_file

    secrets:
      - mysql_user_secret
      - mysql_password_secret
      - mysql_database_secret
      - mysql_root_password_file

networks:
  app-network:
    driver: bridge

volumes:
  myDB:
    #external: true

secrets:
  mysql_user_secret:
    file: ./secrets/MYSQL_USER.txt
  mysql_password_secret:
    file: ./secrets/MYSQL_PASSWORD.txt
  mysql_host_secret:
    file: ./secrets/MYSQL_HOST.txt 
  mysql_port_secret:
    file: ./secrets/MYSQL_PORT.txt 
  mysql_database_secret:
    file: ./secrets/MYSQL_DATABASE.txt
  flask_secret_key_secret:
    file: ./secrets/FLASK_SECRET_KEY.txt
  mysql_root_password_file:
    file: ./secrets/MYSQL_ROOT_PASSWORD_FILE.txt
  